import UIKit

// リードオンリーの変数

/**
 -----------------------------------------------------------------
 ■ 変数bodyは値を代入しないリードオンリーの変数(これもComputedプロパティ)
 値の取得のみが可能なリードオンリーの変数
 -----------------------------------------------------------------
 */

式の値を返す変数: do {
    print("------------ 式の値を返す変数 ------------")
    var num: Int {
        let result = 2 * 5
        return result
    }
    // 計算結果のresultがnumの値として返ってくる
    print(num)      // 10
}

式の値を返す変数_returnを省略する: do {
    print("------------ 式の値を返す変数_returnを省略する ------------")
    // 式が1行だからreturnを省略できる
    var num: Int {
        2 * 10
    }
    print(num)      // 10
}

/**
 -----------------------------------------------------------------
 ■ Computedプロパティ
 計算型プロパティのこと。他のプロパティの値をもとに別の値に算出する場合や、
 プロパティにアクセスする直前に何かしらのチェックや計算が必要な場合に利用する。
 -----------------------------------------------------------------
 */
直径_円周の値を式で計算する: do {
    print("------------ 直径_円周の値を式で計算する ------------")

    // 半径（radiusの値だけ保持している状態）
    var radius = 10.0
    // 直径（計算式が定義されているだけで値は保持していない計算型プロパティ）
    var diameter: Double {
        get         { radius * 2 }              // 半径から計算された直径の値を返す
        set(length) { radius = length / 2 }     // 直径から半径を計算して変数radiusに代入
    }

    // 円周の長さ（計算式が定義されているだけで値は保持していない計算型プロパティ）
    var around: Double {
        // 半径から円周を計算して返す
        get {
            let length = 2 * radius * Double.pi
            return length
        }
        // 円周から半径を計算して変数radiusに代入
        set(length) {
            radius = length / (2 * Double.pi)
        }
    }

    // 検証
    print("半径が \(radius) のとき直径の長さは、 \(diameter)")       // 半径10.0 直径20.0

    diameter = 30
    print("直径が \(diameter) の円の半径は、 \(radius)")            // 直径30.0 半径15.0

    around = 100
    print("円周の長さが \(around) の円の半径は、 \(radius)")         // 円周の長さ100.0 円の半径15.915...
}
